{"version":3,"sources":["patients/components/patient_list.cljs"],"mappings":";AAKA,GAAA,QAAAA,qCAAAC,gDAAAC,6DAAAC;AAAA;AAAA,AAAA,AAASC,sDAAmB,gDAAA,hDAACC;;AAE7B,gDAAA,hDAAMC;AAAN,AACE,0DAAA,wFAAA,2CAAA,tLAACC,iPACmB,WAAKC;AAAL,AACE,OAACC,sBAAOL,oDAAmBI;;;AAEnD,AAACF;AAED,gDAAA,hDAAMI;AAAN,AAAA,0FAAA,mDAAA,2CAAA,wDAAA,gCAAA,mFAAA,kDAGI,iBAAAC,qBAAA,sEAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBA27E+C,AAAAkB,sBAAAvB;IA37E/CM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,cAAA,AAAAK,eAAAN,gBAAAK,zCAAMW;AAAN,AAAA,AAAA,AAAAT,uBAAAJ,SAAA,mFAAA,gDAAA,2CAAA,6IAAA,wDAAA,+BAAA,hLACa,AAAA,gFAAKa,mLAEdC,wCAAYD;;AAHhB,eAAA,CAAAX,WAAA;;;;AAAA;;;;;AAAA,OAAAG,qBAAA,AAAAC,gBAAAN,UAAA,AAAAO,4DAAA,AAAAC,qBAAAhB;;AAAA,OAAAa,qBAAA,AAAAC,gBAAAN,UAAA;;;AAAA,cAAA,AAAAS,gBAAAjB,1BAAMqB;AAAN,AAAA,OAAAH,eAAA,mFAAA,gDAAA,2CAAA,6IAAA,wDAAA,+BAAA,mJAAA,AAAAH,4DAAA,AAAAI,eAAAnB,9YACa,AAAA,gFAAKqB,mLAEdC,wCAAYD;;;AAHhB;;;;GAAA,KAAA;;AAAA,AAAA,OAAAtB,mBAAA,AAAAqB,gBAAe5B","names":["js/patients","js/patients.components","js/patients.components.patient-list","js/patients.components.patient-list.patient-list-state","patients.components.patient-list/patient-list-state","reagent.core.atom","patients.components.patient-list/get-patients","ajax.core.GET","resp","cljs.core/reset!","patients.components.patient-list/patient-list","iter__5523__auto__","s__17021","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__17023","cljs.core/chunk-buffer","i__17022","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__17020","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core/deref","patient","patients.components.patient/patient-row","cljs.core/chunk-first"],"sourcesContent":["(ns patients.components.patient-list\n  (:require [ajax.core :as ajax]\n            [reagent.core :as r]\n            [patients.components.patient :refer [patient-row]]))\n\n(defonce patient-list-state (r/atom nil))\n\n(defn get-patients []\n  (ajax/GET \"http://localhost:4000/api/patients/\"\n            {:handler (fn [resp]\n                        (reset! patient-list-state resp))}))\n\n(get-patients)\n\n(defn patient-list []\n  [:div {:class \"col-start-1 col-end-2\"}\n   [:ul\n    (for [patient @patient-list-state]\n      [:li {:key (:id patient)\n            :class \"hover:cursor-pointer\"}\n       [patient-row patient]])]])\n"]}